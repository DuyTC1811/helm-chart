replicaCount: 1                   # Cấu hình số lượng replica cho ứng dụng

image:
  repository: mysql               # Sử dụng image MySQL
  pullPolicy: IfNotPresent        # Chỉ kéo image khi chưa có trong node
  tag: "8.0.34"                   # Phiên bản MySQL

mysql:
  rootPassword: "anhduy12"
  database: "mydatabase"
  user: "duytc"
  password: "anhduy12"
  image: "mysql:8.0.34"

  persistence:
    enabled: true                 # Kích hoạt tính năng sử dụng Persistent Volume
    size: 8Gi                     # Kích thước của Persistent Volume, ví dụ là 8GiB
    storageClass: ""              # Tùy chọn: storageClass cho PVC. Để trống để sử dụng mặc định

imagePullSecrets: []              # Dùng để chỉ định các thông tin đăng nhập (secret) khi pull image từ private container registry.
nameOverride: ""                  # Cho phép bạn thay thế tên mặc định của Helm chart bằng một tên khác.
fullnameOverride: ""              # Cho phép override toàn bộ tên đầy đủ của các resource được tạo từ Helm chart.

serviceAccount:
  create: true                    # Specifies whether a service account should be created
  automount: true                 # Automatically mount a ServiceAccount's API credentials?
  annotations: {}                 # Annotations to add to the service account
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}                # Thêm metadata tùy chỉnh cho pod ví (ví dụ: Prometheus).
podLabels: {}                     # Thêm nhãn phân loại cho pod

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP                 # Kiểu service: ClusterIP | NodePort | LoadBalancer
  port: 3306                      # cổng cho MySQL

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
